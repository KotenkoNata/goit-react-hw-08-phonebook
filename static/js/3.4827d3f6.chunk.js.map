{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","views/ContactsView.js"],"names":["module","exports","contactsOperations","addContact","name","number","dispatch","a","contact","actions","addContactRequest","axios","post","data","addContactSuccess","addContactError","message","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContacts","fetchContactRequest","get","fetchContactSuccess","fetchContactError","getFilter","state","contacts","filter","getAllContacts","items","contactsSelectors","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactList","this","props","onDeleteContact","isLoading","className","styles","contactList","length","map","id","contactItem","type","button","onClick","notification","Component","connect","contactOperations","Filter","onChange","defaultProps","event","contactActions","changeFilter","target","value","ContactForm","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","onSubmit","existingContact","find","alert","reset","form","required","ContactView","Section"],"mappings":"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","file":"static/js/3.4827d3f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contactItem\":\"ContactList_contactItem__EQAbQ\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\"};","import axios from \"axios\";\n\nimport actions from \"./contacts-actions\";\n\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(actions.fetchContactRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(actions.fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactError(error.message));\n  }\n};\n\nconst addContact = (name, number) => async (dispatch) => {\n  const contact = { name, number };\n\n  dispatch(actions.addContactRequest());\n  try {\n    const { data } = await axios.post(\"/contacts\", contact);\n    dispatch(actions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.addContactError(error.message));\n  }\n};\n\nconst deleteContact = (contactId) => async (dispatch) => {\n  dispatch(actions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(actions.deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error.message));\n  }\n};\n\nconst contactsOperations = {\n  addContact,\n  deleteContact,\n  fetchContacts,\n};\n\nexport default contactsOperations;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = (state) => state.contacts.loading;\n\nconst getFilter = (state) => state.contacts.filter;\n\nconst getAllContacts = (state) => state.contacts.items;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nconst contactsSelectors = {\n  getAllContacts,\n  getLoading,\n  getFilter,\n  getVisibleContacts,\n};\n\nexport default contactsSelectors;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  contactOperations,\n  contactsSelectors,\n} from \"../../redux/contacts/index\";\n\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./ContactList.module.css\";\n\nimport Loading from \"../Loader\";\n\nclass ContactList extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      })\n    ),\n    onDeleteContact: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, onDeleteContact, isLoading } = this.props;\n\n    return (\n      <>\n        {isLoading && <Loading />}\n        <ul className={styles.contactList}>\n          {contacts.length ? (\n            contacts.map(({ id, name, number }) => (\n              <li className={styles.contactItem} key={id}>\n                {name} : {number}\n                <button\n                  type=\"button\"\n                  className={styles.button}\n                  onClick={() => onDeleteContact(id)}\n                >\n                  Delete\n                </button>\n              </li>\n            ))\n          ) : (\n            <li className={styles.notification}>No contact found</li>\n          )}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n  isLoading: contactsSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(contactOperations.deleteContact(id)),\n  fetchContacts: () => dispatch(contactOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/contacts/contacts-actions';\nimport { contactsSelectors } from '../../redux/contacts/index';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className={styles.filter}>\n      Find contacts by name{' '}\n      <input type=\"text\" filter={filter} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  filter: '',\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(contactActions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  contactOperations,\n  contactsSelectors,\n} from \"../../redux/contacts/index\";\n\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { items, onSubmit } = this.props;\n\n    if (!name) {\n      return;\n    }\n\n    const existingContact = items.find((contact) => contact.name === name);\n\n    if (existingContact) {\n      alert(`${existingContact.name} is already in contacts.`);\n      return;\n    }\n\n    onSubmit(name, number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"name\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"number\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  items: contactsSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) =>\n    dispatch(contactOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React, { Component } from \"react\";\n\nimport Section from \"../components/Section\";\nimport ContactList from \"../components/ContactList\";\nimport Filter from \"../components/Filter\";\nimport ContactForm from \"../components/ContactForm\";\n\nclass ContactView extends Component {\n  render() {\n    return (\n      <>\n        <Section>\n          <h1>PhoneBook</h1>\n          <ContactForm />\n        </Section>\n        <Section>\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default ContactView;\n"],"sourceRoot":""}